Practical No. 7A
 
Aim: Write an Android program to demonstrate the concept of Gestures in Flutter. 
 
 
main.dart 
 
import 'package:flutter/material.dart'; 
 
void main() => runApp(GestureDemo()); 
 
class GestureDemo extends StatefulWidget { 
  @override 
  _GestureDemoState createState() => _GestureDemoState(); 
} 
 
class _GestureDemoState extends State<GestureDemo> { 
  String _gestureStatus = ''; 
 
  void _onTap() { 
    setState(() { 
      _gestureStatus = 'Tapped!'; 
    }); 
  } 
 
  void _onDoubleTap() { 
    setState(() { 
      _gestureStatus = 'Double Tapped!'; 
    }); 
  } 
 
  void _onLongPress() { 
    setState(() { 
      _gestureStatus = 'Long Pressed!'; 
    }); 
  } 
 
  void _onVerticalDragStart(DragStartDetails details) { 
    setState(() { 
      _gestureStatus = 'Drag started vertically!'; 
    }); 
  } 
 
  void _onVerticalDragUpdate(DragUpdateDetails details) { 
    setState(() { 
      _gestureStatus = 'Dragging vertically!'; 
    }); 
  } 
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx7A
 Aim: Implement the concept of Stateful and Stateless Widgets for managing dynamic and
          static components of the user interface. (Gestures)
 
  void _onVerticalDragEnd(DragEndDetails details) { 
    setState(() { 
      _gestureStatus = 'Drag ended vertically!'; 
    }); 
  } 
 
  @override 
  Widget build(BuildContext context) { 
    return MaterialApp( 
      home: Scaffold( 
        appBar: AppBar( 
          title: Text('Gesture Demo'), 
        ), 
        body: Column( 
          mainAxisAlignment: MainAxisAlignment.center, 
          children: <Widget>[ 
            GestureDetector( 
              onTap: _onTap, 
              onDoubleTap: _onDoubleTap, 
              onLongPress: _onLongPress, 
              onVerticalDragStart: _onVerticalDragStart, 
              onVerticalDragUpdate: _onVerticalDragUpdate, 
              onVerticalDragEnd: _onVerticalDragEnd, 
              child: Container( 
                height: 200, 
                color: Colors.blueGrey, 
                child: Center( 
                  child: Text( 
                    _gestureStatus, 
                    style: TextStyle(fontSize: 24), 
                  ), 
                ), 
              ), 
            ), 
          ], 
        ), 
      ), 
    ); 
  } 
} 
 
  
Output 


xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxPractical No. 7B 
 
Aim: Write an Android program to demonstrate the concept of Widgets in Flutter. 
 
 
main.dart 
 
import 'package:flutter/material.dart'; 
 
void main() { 
  runApp(const MyApp()); 
} 
 
class MyApp extends StatelessWidget { 
  const MyApp({Key? key}) : super(key: key); 
 
  @override 
  Widget build(BuildContext context) { 
    return MaterialApp( 
      debugShowCheckedModeBanner: false, 
      home: Scaffold( 
        appBar: AppBar( 
          title: const Text("Login"), 
        ), 
        body: Column( 
          mainAxisAlignment: MainAxisAlignment.center, 
          children: [ 
            const Text( 
              'Flutter Practical', 
              style: TextStyle(fontWeight: FontWeight.bold, fontSize: 30), 
            ), 
            const SizedBox( 
              height: 30, 
            ), 
            const TextField( 
              decoration: InputDecoration(hintText: 'Enter Your Name'), 
            ), 
            const SizedBox( 
              height: 30, 
            ), 
            ElevatedButton( 
              onPressed: () { 
              }, 
              child: const Text('Login',style: TextStyle(fontSize: 30),), 
            ), 
            const SizedBox( 
              height: 30, 
            ), 

Aim: Create a dynamic user interface using essential widgets and adaptive widgets.
 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx7B

            const Image( 
                image: 
NetworkImage('https://staticg.sportskeeda.com/editor/2022/11/a402f
16694231050443-1920.jpg') 
            ), 
          ], 
        ), 
      ), 
    ); 
  } 
} 
 
  
Output 
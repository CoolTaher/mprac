
-----------------------------------------------------------------------Practical 1----------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx[Q1.html]xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# Accept rxc matrix and Display matrix
M1 = []
r1=int(input("Enter rows:"))
c1=int(input("Enter cols:"))
for i in range(r1):
    a=[]
    for j in range(c1):
        e=int(input("Enter elements:"))
        a.append(e)
    M1.append(a)

for i in range(r1):
    for j in range(c1):
        print(M1[i][j],end=" ")
    print(" ")


xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx[Q2.html]xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

#Accept marix from user and display second row
M1 = []
r1=int(input("Enter no. rows :"))
c1=int(input("Enter no. cols :"))
for i in range(r1):
    a=[]
    for j in range(c1):
        e=int(input("Enter element:"))
        a.append(e)
    M1.append(a)

for i in range(r1):
    for j in range(c1):
        print(M1[i][j],end=" ")
    print(" ")

print("Second row of matrix:")
for j in range(c1):
    print(M1[1][j],end=" ")
print(" ")

'''#For given matrix
M1 = [[3,4,7],[5,8,3],[9,7,1]]
print(M1)
if len(M1) > 2:
    print("Second row of matrix is :",M1[1])
else:
    print("The Matrix dosen't have second row")'''

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx[Q3.html]xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

#Accept matrix from user and find transpose
M1 = []
r1=int(input("Enter no. rows :"))
c1=int(input("Enter no. cols :"))
for i in range(0,r1):
    print("Enter row",i)
    M1.append([])
    for j in range(0,c1):
        n = int(input("Enter column elements:"))
        M1[i].append(n)

for i in range(0,r1):
    for j in range(0,c1):
        print(M1[i][j],end=" ")
    print(" ")

print("The Transpose matrix is:")
for i in range(0,c1):
    for j in range(0,r1):
        print(M1[j][i],end=" ")
    print

    
'''#For Predefined matrix
M1 = [
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9]
]

def display_matrix(matrix):
    for row in matrix:
        print(row)

transpose = [[M1[j][i] for j in range(len(M1))] for i in range(len(M1[0]))]

print("Original Matrix:")
display_matrix(M1)

print("\nTranspose of the Matrix:")
display_matrix(transpose)''' 


xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx[Q4.html]xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

#Accept marix from user and display second column
M1 = []
r1=int(input("Enter no. rows :"))
c1=int(input("Enter no. cols :"))
for i in range(r1):
    a=[]
    for j in range(c1):
        e=int(input("Enter element:"))
        a.append(e)
    M1.append(a)

for i in range(r1):
    for j in range(c1):
        print(M1[i][j],end=" ")
    print(" ")

print("Second column of matrix:")
for i in range(r1):
    print(M1[i][1],end=" ")
print(" ")


'''#For given matrix
M1 = [[3,4,7],[5,8,3],[9,7,1]]
print(M1)
if len(M1[0]) > 2:
    print("Second column of matrix is ")
    for i in range (len(M1)):
        print(M1[i][1])
    
else:
    print("The Matrix dosen't have second column")'''



xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx[Q5.html]xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

#Accept marix from user and display last row
M1 = []
r1=int(input("Enter no. rows :"))
c1=int(input("Enter no. cols :"))
for i in range(r1):
    a=[]
    for j in range(c1):
        e=int(input("Enter element:"))
        a.append(e)
    M1.append(a)

for i in range(r1):
    for j in range(c1):
        print(M1[i][j],end=" ")
    print(" ")

print("Last row of matrix:")
for j in range(c1):
    print(M1[r1-1][j],end=" ")
print(" ")

'''#For given matrix
M1 = [[3,4,7],[5,8,3],[9,7,1]]
print(M1)
print("last row of matrix is :",M1[-1])'''

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx[Q6.html]xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

#Accept marix from user and display specified row or column
M1 = []
r1=int(input("Enter no. rows :"))
c1=int(input("Enter no. cols :"))
for i in range(r1):
    a=[]
    for j in range(c1):
        e=int(input("Enter element:"))
        a.append(e)
    M1.append(a)

for i in range(r1):
    for j in range(c1):
        print(M1[i][j],end=" ")
    print(" ")

print("1.Row")
print("2.column")
op = int(input("Enter your choice you want to display:"))

if op == "1":
    a= int(input("Enter row to be displayed:"))
    a =- 1
    for i in range(r1):
        while a:
            print(M1[i][a],end=" ")
            break

else:
    b= int(input("Enter column to be displayed:"))
    b =- 1
    for j in range(c1):
        while b:
            print(M1[b][j],end=" ")
            break


xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx[Q7.html]xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

#Accept marix from user and find the scalar multiplication
M1 = []
r1=int(input("Enter no. rows :"))
c1=int(input("Enter no. cols :"))
s=int(input("Enter number for multiplication:"))
for i in range(r1):
    a=[]
    for j in range(c1):
        e=int(input("Enter element:"))
        a.append(e)
    M1.append(a)

for i in range(r1):
    for j in range(c1):
        print(M1[i][j],end=" ")
    print(" ")

print("Scalar multiplication")
m = M1
for i in range(r1):
    for j in range(c1):
        m[i][j] = M1[i][j]*s
        print(m[i][j],end=" ")
    print(" ")


'''#For predefined matrix
M = [[2, 4, 1], [2, 5, 3], [8, 4, 2]]

print("Original Matrix:")
for row in M:
    print(row)

s = int(input("\nEnter number for multiplication: "))

result = [[elem * s for elem in row] for row in M]

print("\nMatrix after multiplication:")
for row in result:
    print(row)'''


xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx[Q8.html]xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

#sum of 2 matrix(user input)
M1 = []
M2 = []
r1=int(input("Enter no. rows for M1 :"))
c1=int(input("Enter no. cols for M1:"))
r2=int(input("Enter no. rows for M2 :"))
c2=int(input("Enter no. cols for M2:"))
if(r1==r2 and c1==c2):
    print("Enter elements for M1")
    for i in range(r1):
        print("Enter row",i)
        a=[]
        for j in range(c1):
            n = int(input("Enter column elements:"))
            a.append(n)
        M1.append(a)

    print("Enter elements for M2")
    for i in range(r2):
        print("Enter row",i)
        a=[]
        for j in range(c2):
            n = int(input("Enter column elements:"))
            a.append(n)
        M2.append(a)

print("Matrix 1")
for i in range(r1):
    for j in range(c1):
        print(M1[i][j],end=" ")
    print(" ")

print("Matrix 2")
for i in range(r2):
    for j in range(c2):
        print(M2[i][j],end=" ")
    print(" ")

print("Addition of matrix")
sum = M1
for i in range(r1):
    for j in range(c1):
        sum[i][j] = M1[i][j]+M2[i][j]
        print(sum[i][j],end=" ")
    print(" ")


'''#for predefined matrix
M1 = [[2, 4, 1], [2, 5, 3], [8, 4, 2]]
M2 = [[4, 5, 1], [1, 7, 2], [3, 8, 9]]

print("Original Matrix1:")
for row in M1:
    print(row)

print("Original Matrix2:")
for row in M2:
    print(row)

sum_matrix = [[0 for _ in range(len(M1[0]))] for _ in range(len(M1))]

print("\nAddition of matrix1 and matrix2:")
for i in range(len(M1)):
    for j in range(len(M1[0])):
       sum_matrix[i][j] = M1[i][j] + M2[i][j]

for row in sum_matrix:
    print(row)'''
       

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx[Q9.html]xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

#Accept 3X3 matrix from user(A,B,C) and find A+B+C
A=[]
B=[]
C=[]
r=int(input("Enter no. of rows:"))
c=int(input("Enter no. of cols:"))
print("Enter elements for Matrix1:")
for i in range(r):
    a=[]
    for j in range(c):
        e=int(input("Enter element:"))
        a.append(e)
    A.append(a)

for i in range(r):
    for j in range(c):
        print(A[i][j],end=" ")
    print(" ")

print("Enter elements for Matrix2:")
for i in range(r):
    a=[]
    for j in range(c):
        e=int(input("Enter element:"))
        a.append(e)
    B.append(a)

for i in range(r):
    for j in range(c):
        print(B[i][j],end=" ")
    print(" ")

print("Enter elements for Matrix3:")
for i in range(r):
    a=[]
    for j in range(c):
        e=int(input("Enter element:"))
        a.append(e)
    C.append(a)

for i in range(r):
    for j in range(c):
        print(C[i][j],end=" ")
    print(" ")

s=C
print("Addition of A+B+C:")
for i in range(r):
    for j in range(c):
        s[i][j] = A[i][j]+B[i][j]+C[i][j]
        print(s[i][j],end=" ")
    print(" ")


'''#For predefined matrix
A = [[1, 2, 3],[4, 5, 6], [7, 8, 9]]
B = [[3, 1, 2],[1, 2, 1], [3, 2, 1]]
C = [[1, 2, 3],[4, 5, 2], [5, 4, 8]]

print("Original Matrix1:")
for row in A:
    print(row)

print("Original Matrix2:")
for row in B:
    print(row)

print("Original Matrix3:")
for row in C:
    print(row)

result= [[0 for _ in range(len(A[0]))] for _ in range(len(A))]

print("A+B+C:")
for i in range(len(A)):
    for j in range(len(A[0])):
       result[i][j] = A[i][j] + B[i][j] + C[i][j]

for row in result:
    print(row)'''


xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx[Q10.html]xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

#Accept matrix A and B from user and find 2A+B
def input_matrix(square=False,dtype=float):
    if square:
        r=c=int(input("Enter the diamension of square matrix:"))
    else:
        r=int(input("Enter no. of rows:"))
        c=int(input("Enter no. of cols:"))
    ret_mat=[]
    for i in range(r):
        ret_row= [dtype(input(f"Enter elements at position [{i+1},{j+1}]:"))for j in range(c)]
        ret_mat.append(ret_row)
    return ret_mat

A = input_matrix()
print("First matrix:",A)
B = input_matrix()
print("First matrix:",B)

def add_matrix(M1,M2):
    rows=len(M1)
    cols=len(M1[0])
    result=[]
    for i in range(rows):
        rows=[]
        for j in range(cols):
            rows.append(2*M1[i][j] + M2[i][j])
        result.append(rows)
    return result
print("Addition of 2A+B:",add_matrix(A,B))


'''#For predefined matrix
A = [[1, 2, 3],[4, 5, 6], [7, 8, 9]]
B = [[3, 1, 2],[1, 2, 1], [3, 2, 1]]

print("Original Matrix1:")
for row in A:
    print(row)

print("Original Matrix2:")
for row in B:
    print(row)

result= [[0 for _ in range(len(A[0]))] for _ in range(len(A))]

print("2A+B:")
for i in range(len(A)):
    for j in range(len(A[0])):
       result[i][j] = 2*A[i][j] + B[i][j]

for row in result:
    print(row)'''


xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx[Q11.html]xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx


#2D array
#Multiplying matrix
def input_matrix(r,c):
    matrix = []
    for i in range(r):
        row = []
        for j in range(c):
            element = int(input("Enter element at positon:"))
            row.append(element)
        matrix.append(row)
    return matrix

def mul_matrix(m1,m2):
    r1 = len(m1)
    c1 = len(m1[0])
    r2 = len(m2)
    c2 = len(m2[0])

    if c1 != r2:
        print("Matrix multiplication is not possible.")
        return None

    result = [[0 for _ in range(c2)]for _ in range(r1)]

    for i in range(r1):
        for j in range(c2):
            for k in range(c1):
                result[i][j] += m1[i][k] * m2[k][j]
    return result

if __name__ == "__main__":
    r1 = int(input("Enter no. of rows for first matrix:"))
    c1 = int(input("Enter no. of cols for first matrix:"))
    print("Enter element for first matrix:")
    m1 = input_matrix(r1,c1)

    r2 = int(input("Enter no. of rows for first matrix:"))
    c2 = int(input("Enter no. of cols for first matrix:"))
    print("Enter element for second matrix:")
    m2 = input_matrix(r2,c2)

    result_matrix = mul_matrix(m1,m2)
    print("The result matrix after multiplication is : ")
    for r in result_matrix:
        print(r)
        

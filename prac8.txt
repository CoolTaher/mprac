Practical No. 8 
 
Aim: Write an Android program to demonstrate the concept of Layouts in Flutter. 
 
 
main.dart 
 
import 'package:flutter/material.dart'; 
 
void main() { 
  runApp(MyApp()); 
} 
 
class MyApp extends StatelessWidget { 
  @override 
  Widget build(BuildContext context) { 
    return MaterialApp( 
      title: 'Layout Demo', 
      home: Scaffold( 
        appBar: AppBar( 
          title: Text('Layout Demo'), 
        ), 
        body: Center( 
          child: Column( 
            mainAxisAlignment: MainAxisAlignment.center, 
            children: [ 
              Text('This is a column'), 
              SizedBox(height: 20), 
              Row( 
                mainAxisAlignment: MainAxisAlignment.spaceAround, 
                children: [ 
                  Container( 
                    height: 50, 
                    width: 50, 
                    color: Colors.blue, 
                  ), 
                  Container( 
                    height: 50, 
                    width: 50, 
                    color: Colors.red, 
                  ), 
                  Container( 
                    height: 50, 
                    width: 50, 
                    color: Colors.green, 
                  ), 
                ], 
              ), 


xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx8A
 Aim: Design the app layout effectively using Row, Column, and Stack Widgets for a
         visually appealing UI.


              SizedBox(height: 20), 
              Expanded( 
                child: Container( 
                  color: Colors.yellow, 
                  child: Center( 
                    child: Text('This is an expanded container'), 
                  ), 
                ), 
              ), 
            ], 
          ), 
        ), 
      ), 
    ); 
  } 
} 
 
  

xxxxxxxxxxxxxxxxxxxxxPractical No. 8B 
Aim: Customize the app's appearance by managing assets, fonts, 
and theming. 

pubspec.yaml: 
name: flutter_pracs 
description: "A new Flutter project." 
publish_to: 'none' 
version: 1.0.0+1 
environment: 
sdk: ^3.7.0 
dependencies: 
flutter: 
sdk: flutter 
cupertino_icons: ^1.0.8 
dev_dependencies: 
flutter_test: 
sdk: flutter 
flutter_lints: ^5.0.0 
flutter: 
uses-material-design: true 
assets: - assets/images/flutter_logo.png 
fonts: - family: Poppins 
fonts: - asset: assets/fonts/Poppins.ttf 
main.dart: 
import 'package:flutter/material.dart'; 
void main() { 
runApp(MyApp()); 
} 
class MyApp extends StatefulWidget { 
@override 
_MyAppState createState() => _MyAppState(); 
} 
class _MyAppState extends State<MyApp> { 
bool isDarkMode = false; 
@override 
Widget build(BuildContext context) { 
return MaterialApp( 
debugShowCheckedModeBanner: false, 
theme: isDarkMode ? darkTheme : lightTheme, 
home: HomeScreen( 
toggleTheme: () { 
setState(() { 
isDarkMode = !isDarkMode; 
}); 
}, 
), 
); 
} 
} 
// Define Light Theme 
final ThemeData lightTheme = ThemeData( 
brightness: Brightness.light, 
primarySwatch: Colors.blue, 
textTheme: TextTheme( 
bodyLarge: TextStyle(fontFamily: 'Poppins', fontSize: 20, color: 
Colors.black), 
), 
); 
// Define Dark Theme 
final ThemeData darkTheme = ThemeData( 
brightness: Brightness.dark, 
primarySwatch: Colors.blueGrey, 
textTheme: TextTheme( 
bodyLarge: TextStyle(fontFamily: 'Poppins', fontSize: 20, color: 
Colors.white), 
), 
); 
class HomeScreen extends StatelessWidget { 
final VoidCallback toggleTheme; 
HomeScreen({required this.toggleTheme}); 
@override 
Widget build(BuildContext context) { 
return Scaffold( 
appBar: AppBar(title: Text("Flutter Theming Example")), 
body: Center( 
child: Column( 
mainAxisAlignment: MainAxisAlignment.center, 
children: [ 
Image.asset('assets/images/flutter_logo.png', width: 150),                                                                                                                                         
SizedBox(height: 20), 
Text("Customize App Appearance!", style: 
Theme.of(context).textTheme.bodyLarge), 
SizedBox(height: 20), 
ElevatedButton( 
onPressed: toggleTheme, 
child: Text("Toggle Theme"), 
), 
], 
), 
), 
); 
} 
} 
Output: 
 
 